name:                dna-ms3
version:             0.1
synopsis:            DSL constructions for radio astronomy imaging with a focus on data movement and optimization
-- description:         
homepage:            https://github.com/SKA-ScienceDataProcessor/RC
license:             Apache-2.0
license-file:        LICENSE
author:              Peter Braam
maintainer:          peter.braam@peterbraam.com
-- copyright:           
category:            Concurrency
build-type:          Custom
cabal-version:       >=1.16


Flag network-uri
   description: Get Network.URI from the network-uri package
   default: True

Flag cuda
   description: Build with support for CUDA
   default: True

----------------------------------------------------------------
library
  default-language:    Haskell2010
  ghc-options:         -O2 -Wall -threaded
  Hs-source-dirs:      lib
  build-depends:
    base         >=4.6,
    unix,
    time,
    old-locale,
    random,
    bytestring   >= 0.10, 
    binary,
    process      >= 1.2,
    directory,
    filepath,
    containers   >= 0.5,
    deepseq      >= 1.3,
    transformers >= 0.4.1,
    mtl          >= 2.1,
    vector                  >= 0.10,
    vector-binary-instances >= 0.2.1,
    distributed-static,
    distributed-process          == 0.5.*,
    network-transport     >= 0.4,
    network-transport-tcp >= 0.4,
    optparse-applicative  >= 0.11,
    data-accessor         >= 0.2.2,
    operational,
    stm,
    async,
    linux-perf-stat

  -- Deal with Network.URI appearing in different versions of network
  -- and network-uri, as suggested by "network" package
  if flag(network-uri)
    build-depends: network >= 2.6, network-uri >= 2.6
  else
    build-depends: network < 2.6

  if flag(cuda)
    build-depends: cupti
    cpp-options:   -DUSE_CUDA

  Exposed-modules:
    DNA
    DNA.Channel.File
    DNA.CH
    DNA.CmdOpts
    DNA.DSL
    DNA.Interpreter
    DNA.Interpreter.Connect
    DNA.Interpreter.Message
    DNA.Interpreter.Run
    DNA.Interpreter.Spawn
    DNA.Interpreter.Types
    DNA.Lens
    DNA.Logging
    DNA.Run
    DNA.SlurmBackend
    DNA.Types
  c-sources:
    cbits/channel-file.c

----------------------------------------------------------------
-- Programs
executable ddp-in-memory-hierachical
  default-language:    Haskell2010
  ghc-options:         -O2 -Wall -threaded -eventlog
  Hs-source-dirs:      dna-programs
  main-is:             ddp-in-memory-hierarchical.hs
  build-depends:
    base >=4.6,
    dna-ms3,
    binary,
    bytestring,
    data-binary-ieee754,
    vector >= 0.10,
    directory
  other-modules:
    DDP
    DDP_Slice

executable ddp-in-memory-collector
  default-language:    Haskell2010
  ghc-options:         -O2 -Wall -threaded -eventlog
  Hs-source-dirs:      dna-programs
  main-is:             ddp-in-memory-collector.hs
  build-depends:
    base >=4.6,
    dna-ms3,
    binary,
    bytestring,
    data-binary-ieee754,
    vector >= 0.10,
    directory
  other-modules:
    DDP
    DDP_Slice

executable ddp-in-memory
  default-language:    Haskell2010
  ghc-options:         -O2 -Wall -threaded -eventlog
  Hs-source-dirs:      dna-programs
  main-is:             ddp-in-memory-collector.hs
  build-depends:
    base >=4.6,
    dna-ms3,
    binary,
    bytestring,
    data-binary-ieee754,
    vector >= 0.10,
    directory
  other-modules:
    DDP
    DDP_Slice

executable GCF_DNA
  default-language:    Haskell2010
  ghc-options:         -O2 -Wall -threaded -eventlog
  Hs-source-dirs:      Sketches/GCF_new Sketches/FFT Sketches/Utils
  main-is:             GCF_DNA.hs
  build-depends:
    base >=4.6,
    mmap,
    ghc-prim,
    binary,
    time >=1.4.2,
    bytestring >= 0.10.4.0,
    storable-complex,
    dna-ms3
  if flag(cuda) {
     build-depends:    cuda >=0.6.6, cufft
     x-cuda-sources-cubin: Sketches/GCF_new/all.cu
     x-cuda-options:   -gencode arch=compute_30,code=sm_30
  } else {
     buildable:        False
  }
  other-modules:
    FFT

executable Gridder_DNA
  default-language:    Haskell2010
  ghc-options:         -O2 -Wall -threaded -eventlog
  Hs-source-dirs:      dna-programs Sketches/GCF_new Sketches/GPU_Gridders Sketches/CPU_Gridders Sketches/Oskar_New_Reader Sketches/FFT Sketches/Utils
  include-dirs:        ../../oskar_binary Sketches/Utils Sketches/Oskar_New_Reader Sketches/GPU_Gridders Sketches/CPU_Gridders
  extra-libraries:     oskar_binary stdc++ gomp fftw3
  extra-lib-dirs:      ../../oskar_binary
  cc-options:          --std=c++0x -ffast-math -mavx -fopenmp
  main-is:             Gridder_DNA.hs
  build-depends:
    base >=4.6,
    mmap,
    ghc-prim,
    binary,
    time >=1.4.2,
    bytestring >= 0.10.4.0,
    directory,
    filepath,
    storable-complex,
    distributed-static,
    distributed-process,
    dna-ms3
  if flag(cuda) {
     build-depends:  cuda >=0.6.6, cufft
     x-cuda-sources: Sketches/Utils/cudaCfg.c Sketches/GCF_new/all.cu Sketches/GPU_Gridders/scatter_gridders_smem_ska.cu Sketches/GPU_Gridders/gather_gridder.cu Sketches/FFT/cufftshift.cu
     x-cuda-options: -ISketches/CPU_Gridders -ISketches/Oskar_New_Reader -gencode arch=compute_30,code=sm_30
  } else {
     buildable:        False
  }
  other-modules:
    OskarBinReaderFFI
  c-sources:
    Sketches/Utils/aligned_malloc.cpp
    Sketches/Oskar_New_Reader/OskarBinReader.cpp
    Sketches/Oskar_New_Reader/binner.cpp
    Sketches/CPU_Gridders/scatter_gridder_w_dependent.cpp
    Sketches/CPU_Gridders/fft.cpp
